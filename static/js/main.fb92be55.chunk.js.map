{"version":3,"sources":["const/config.js","api/mini-clip-chat-api.js","const/actions.js","services/socket.js","components/Dialog.js","utils/index.js","components/ChatMessage.js","components/ChatMessageBoard.js","components/ChatMessageEditor.js","components/ChatListOfUsers.js","screens/Chat.js","const/messages.js","reducers/messagesReducer.js","hooks/useChat.js","screens/MainScreen.js","App.js","serviceWorker.js","index.js"],"names":["url","axios","create","baseURL","socket","openSocket","connect","LinkContainer","styled","div","disabled","css","useStyles","makeStyles","theme","avatarPicker","padding","marginTop","borderWidth","flexDirection","display","alignItems","alignText","props","classes","state","setProfileImage","actions","loading","fileSelector","handleFileSelected","document","createElement","setAttribute","onchange","e","target","files","createFileSelector","useState","username","setUsername","submit","useCallback","joinRoom","imageUrl","Dialog","aria-labelledby","open","DialogTitle","DialogContent","TextField","error","id","label","variant","value","helperText","onChange","Container","className","Avatar","alt","src","linkContainer","href","onClick","click","DialogActions","Button","color","endIcon","CircularProgress","size","StyledListItem","ListItem","TimeAgo","addLocale","en","timeAgo","user","message_id","sent_at","message","date","Date","key","ListItemAvatar","ListItemText","secondary","Typography","component","stlye","primary","Fragment","style","alignSelf","inline","format","root","height","overflowY","backgroundColor","palette","background","paper","messages","users","showLatest","setShowLatest","bottomRef","useRef","useLayoutEffect","current","scrollIntoView","behavior","length","containerRef","useBottomScrollListener","List","ref","onScroll","map","index","ChatMessage","Divider","float","clear","width","sendMessage","setMessage","noValidate","autoComplete","multiline","rows","onKeyPress","shiftKey","dense","Object","values","filter","Boolean","paddingTop","flexDirectoion","drawer","breakpoints","up","flexShrink","appBar","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","toolbarHeader","flexGrow","content","flex","useTheme","React","mobileOpen","setMobileOpen","container","undefined","window","body","CssBaseline","Hidden","smUp","implementation","Drawer","anchor","onClose","ModalProps","keepMounted","xsDown","AppBar","position","Toolbar","noWrap","ChatMessageBoard","ChatMessageEditor","event","Actions","MESSAGES","initialState","messagesReducer","type","payload","room","useReducer","dispatch","signedIn","setSignedIn","useEffect","currentUserName","on","console","log","signUpForRoomChanges","a","emit","messageText","file","reader","FileReader","onload","result","readAsDataURL","chat","useChat","Chat","App","MainScreen","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.fb92be55.chunk.js","sourcesContent":["export const PORT = 3000;\nexport const DEV_PATH = `http://localhost:${PORT}`;\nexport const PROD_PATH = `https://mini-clip-server.herokuapp.com/`;\n\nexport const url = PROD_PATH;\n","import axios from \"axios\";\n\n// import { AsyncStorage } from \"react-native\";\nimport { url } from \"../const/config\";\nconst instance = axios.create({\n  baseURL: url\n});\nexport default instance;\n","export default {\n  USER_JOIN: \"USER_JOIN\",\n  USER_JOINED: \"USER_JOINED\",\n  USER_LEFT: \"USER_LEFT\",\n  SET_ERROR: \"SET_ERROR\",\n  ADD_MESSAGE: \"ADD_MESSAGE\",\n  SET_PROFILE_IMAGE: \"SET_PROFILE_IMAGE\",\n  SET_IMAGE: \"SET_IMAGE\",\n  RESET: \"RESET\",\n  SET_LOADING: \"SET_LOADING\"\n};\n","import openSocket from \"socket.io-client\";\nimport Actions from \"../const/actions\";\nimport { url } from \"../const/config\";\n\nexport const socket = openSocket(url);\nsocket.connect();\n\nexport const signUpForRoomChanges = (dispatch, currentUserName) => {\n  socket.on(\"message\", message => {\n    // debugger;\n    dispatch({ type: Actions.ADD_MESSAGE, payload: { message } });\n  });\n  socket.on(\"joinedRoom\", user => {\n    // debugger;\n    dispatch({ type: Actions.USER_JOINED, payload: { user } });\n  });\n  socket.on(\"leftRoom\", user => {\n    debugger;\n    if (currentUserName === user.username) {\n      dispatch({ type: Actions.RESET, payload: {} });\n    } else {\n      dispatch({ type: Actions.USER_LEFT, payload: { user } });\n    }\n  });\n  socket.on(\"error\", error => {\n    console.log(error);\n  });\n};\n","import React, { useState, useCallback } from \"react\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styled, { css } from \"styled-components\";\nimport { createFileSelector, toBase64 } from \"../utils\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst LinkContainer = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  a {\n    text-decoration: none;\n    ${({ disabled }) =>\n      disabled &&\n      css`\n        pointer-events: none;\n      `}\n  }\n`;\nconst useStyles = makeStyles(theme => ({\n  avatarPicker: {\n    padding: \"0px\",\n    marginTop: \"10px\",\n    borderWidth: \"thin\",\n    flexDirection: \"row\",\n    display: \"flex\",\n    alignItems: \"center\",\n    alignText: \"center\"\n  }\n}));\n\nexport default props => {\n  const classes = useStyles();\n  const { state, setProfileImage, ...actions } = props;\n  const { loading } = state;\n  debugger;\n  const fileSelector = createFileSelector(setProfileImage);\n\n  const [username, setUsername] = useState(null);\n  const submit = useCallback(\n    username => {\n      username && actions.joinRoom(username, state.imageUrl);\n    },\n    [state]\n  );\n\n  return (\n    <Dialog aria-labelledby=\"simple-dialog-title\" open={!state.username}>\n      <DialogTitle>Sign In</DialogTitle>\n      <DialogContent>\n        <TextField\n          error={state.error}\n          id=\"outlined-basic\"\n          label=\"Username\"\n          variant=\"outlined\"\n          value={username || \"\"}\n          helperText={state.error}\n          onChange={e => {\n            setUsername(e.target.value);\n          }}\n        />\n        <Container className={classes.avatarPicker}>\n          <Avatar alt={username} src={state.imageUrl} />\n          <LinkContainer className={classes.linkContainer}>\n            <a\n              href=\"#\"\n              onClick={() => {\n                fileSelector.click();\n              }}\n            >\n              Choose Image\n            </a>\n          </LinkContainer>\n        </Container>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          endIcon={loading && <CircularProgress color=\"white\" size={20} />}\n          onClick={() => {\n            submit(username);\n          }}\n        >\n          SIGN IN\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","export const createFileSelector = handleFileSelected => {\n  const fileSelector = document.createElement(\"input\");\n  fileSelector.setAttribute(\"type\", \"file\");\n  fileSelector.onchange = e => {\n    handleFileSelected(e.target.files[0]);\n  };\n  return fileSelector;\n};\n\nexport const toBase64 = file =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport TimeAgo from \"javascript-time-ago\";\nimport en from \"javascript-time-ago/locale/en\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { display } from \"@material-ui/system\";\n\nconst StyledListItem = styled(ListItem)`\n  ${({ username }) => {\n    return (\n      username === \"System\" &&\n      css`\n        background-color: lightgrey;\n      `\n    );\n  }}\n`;\n\nTimeAgo.addLocale(en);\nconst timeAgo = new TimeAgo(\"en-US\");\n\nexport default ({ classes, user, ...props }) => {\n  const { message_id, sent_at, username, message } = props;\n  const date = new Date(sent_at);\n  debugger;\n  return (\n    <StyledListItem\n      username={username}\n      alignItems=\"flex-start\"\n      key={message_id}\n    >\n      <ListItemAvatar>\n        <Avatar alt={username} src={user.imageUrl} />\n      </ListItemAvatar>\n      <ListItemText\n        secondary={\n          <>\n            <Typography variant=\"h6\" component=\"span\" color=\"textPrimary\">\n              {username}\n            </Typography>\n            {` said  —  `}\n            <Typography variant=\"h6\" component=\"span\" color=\"textPrimary\">\n              <Typography\n                stlye={{ display: \"table-caption\" }}\n                variant=\"h6\"\n                component=\"span\"\n                color=\"textPrimary\"\n              >\n                {`${message}`}\n              </Typography>\n            </Typography>\n          </>\n        }\n        primary={\n          <React.Fragment>\n            <Typography\n              component=\"span\"\n              style={{ alignSelf: \"flex-end\" }}\n              variant=\"body2\"\n              className={classes.inline}\n              color=\"textPrimary\"\n            >\n              {`${timeAgo.format(date)}`}\n            </Typography>\n          </React.Fragment>\n        }\n      />\n    </StyledListItem>\n  );\n};\n","import React, { useState, useLayoutEffect, useRef } from \"react\";\nimport ChatMessage from \"./ChatMessage\";\nimport { useBottomScrollListener } from \"react-bottom-scroll-listener\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\n\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // width: \"100%\",\n    // flex: 1,\n    height: \"80vh\",\n    overflowY: \"scroll\",\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: \"inline\"\n  }\n}));\n\nexport default ({ messages, users }) => {\n  const classes = useStyles();\n\n  const [showLatest, setShowLatest] = useState(true);\n\n  const bottomRef = useRef(null);\n\n  const scrollToBottom = () => {\n    bottomRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useLayoutEffect(() => {\n    if (showLatest) {\n      scrollToBottom();\n    }\n  }, [showLatest, messages.length]);\n  const containerRef = useBottomScrollListener(() => {\n    setShowLatest(true);\n  });\n  const onScroll = e => {\n    setShowLatest(false);\n  };\n\n  return (\n    <List ref={containerRef} className={classes.root} onScroll={onScroll}>\n      {messages.map((message, index) => (\n        <div key={index}>\n          <ChatMessage\n            classes={classes}\n            user={users[message.username] || {}}\n            {...message}\n          />\n          <Divider variant=\"inset\" component=\"li\" />\n        </div>\n      ))}\n      <div style={{ float: \"left\", clear: \"both\" }} ref={bottomRef} />\n    </List>\n  );\n};\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    \"& .MuiTextField-root\": {\n      // margin: theme.spacing(1),\n      width: \"100%\"\n    }\n  }\n}));\n\nexport default ({ sendMessage, username, error }) => {\n  const classes = useStyles();\n  const [message, setMessage] = useState(\"\");\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <TextField\n        error={username && error}\n        helperText={username && error}\n        id=\"outlined-multiline-static\"\n        label=\"Message\"\n        multiline\n        rows={4}\n        value={message}\n        variant=\"outlined\"\n        onChange={e => {\n          setMessage(e.target.value);\n        }}\n        onKeyPress={e => {\n          if (e.key === \"Enter\" && e.shiftKey) {\n            sendMessage(message);\n            setMessage(\"\");\n          }\n        }}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => {\n          sendMessage(message);\n\n          setMessage(\"\");\n        }}\n      >\n        SEND\n      </Button>\n    </form>\n  );\n};\n","import React from \"react\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // width: \"100%\",\n    overflowY: \"scroll\",\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport default ({ users }) => {\n  const classes = useStyles();\n  debugger;\n  return (\n    <List className={classes.root} dense={false}>\n      {Object.values(users)\n        .filter(Boolean)\n        .map(({ username, imageUrl }) => {\n          return (\n            <ListItem key={username}>\n              <ListItemAvatar>\n                <Avatar alt={username} src={imageUrl} />\n              </ListItemAvatar>\n              <ListItemText primary={username} />\n            </ListItem>\n          );\n        })}\n    </List>\n  );\n};\n","import React, { useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport ChatMessageBoard from \"../components/ChatMessageBoard\";\nimport ChatMessageEditor from \"../components/ChatMessageEditor\";\nimport UsersList from \"../components/ChatListOfUsers\";\nimport styled from \"styled-components\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    paddingTop: \"40px\",\n\n    flexDirectoion: \"row\",\n    display: \"flex\",\n    // width: \"100%\",\n    overflow: \"none\"\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`\n\n      // flex: 1\n    }\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\"\n    }\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth\n  },\n  toolbarHeader: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  content: {\n    // width: \"100vw\",\n    // height: \"90%\",\n    width: `calc(100% - ${drawerWidth}px)`,\n\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"column\"\n  }\n}));\n\nexport default ({ state, sendMessage, ...props }) => {\n  const { users, messages, error, username } = state;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar}>\n        <div className={classes.toolbarHeader}>Logged In Users</div>\n      </div>\n      <Divider />\n      <UsersList users={users} />\n    </div>\n  );\n\n  const container =\n    window !== undefined ? () => window.document.body : undefined;\n  debugger;\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n\n      <div className={classes.drawer}>\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={\"left\"}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper\n            }}\n            ModalProps={{\n              keepMounted: true // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </div>\n      <div className={classes.content}>\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <Toolbar className={classes.appBar}>\n            <Typography variant=\"h6\" noWrap>\n              Mini-Clip Chat\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <ChatMessageBoard users={users} messages={messages} />\n        <ChatMessageEditor\n          error={error}\n          sendMessage={sendMessage}\n          username={username}\n        />\n      </div>\n    </div>\n  );\n};\n","import Actions from \"./actions\";\n\nconst MESSAGES = username => ({\n  [Actions.USER_JOINED]: `${username} joined the room.`,\n  [Actions.USER_LEFT]: `${username} left the room.`\n});\n\nconst message = (username, sent_at, message) => ({\n  username,\n  sent_at,\n  message\n});\n\nexport default (event, username) => {\n  return message(\"System\", new Date(), MESSAGES(username)[event]);\n};\n","import messages from \"../const/messages\";\nimport Actions from \"../const/actions\";\n\nexport const initialState = {\n  error: \"\",\n  messages: [],\n  username: \"\",\n  imageUrl: \"\",\n  users: [],\n  loading: false\n};\n\nexport const messagesReducer = (state, { type, payload }) => {\n  const { user } = payload;\n  switch (type) {\n    case Actions.SET_ERROR:\n      const { error } = payload;\n      return { ...state, error, loading: false };\n    case Actions.ADD_MESSAGE:\n      const { message } = payload;\n      // debugger;\n      return {\n        ...state,\n        error: \"\",\n        loading: false,\n        messages: [...state.messages, message]\n      };\n    case Actions.USER_JOIN:\n      const { room, username } = payload;\n      return {\n        ...state,\n        ...room,\n        loading: true,\n        username,\n        error: \"\"\n      };\n      break;\n    case Actions.USER_LEFT:\n      return {\n        ...state,\n        users: { ...state.users, [user.username]: null },\n        messages: [\n          ...state.messages,\n          messages(Actions.USER_LEFT, user.username)\n        ],\n        loading: false,\n        error: \"\"\n      };\n      break;\n    case Actions.USER_JOINED:\n      debugger;\n      return {\n        ...state,\n        error: \"\",\n        loading: false,\n        messages: [\n          ...state.messages,\n          messages(Actions.USER_JOINED, user.username)\n        ],\n        users: { ...state.users, [user.username]: user }\n      };\n      break;\n    case Actions.SET_PROFILE_IMAGE:\n      const { imageUrl } = payload;\n      return { ...state, imageUrl, error: \"\", loading: false };\n      break;\n    case Actions.SET_LOADING:\n      const { loading } = payload;\n      return { ...state, loading };\n    case Actions.RESET:\n      return { ...initialState };\n      break;\n    default:\n      return state;\n  }\n};\n","import { useState, useReducer, useEffect, useCallback } from \"react\";\nimport Actions from \"../const/actions\";\nimport { socket, signUpForRoomChanges } from \"../services/socket\";\nimport { initialState, messagesReducer } from \"../reducers/messagesReducer\";\n\nexport default () => {\n  const [state, dispatch] = useReducer(messagesReducer, { ...initialState });\n  const [signedIn, setSignedIn] = useState(false);\n  const { username } = state;\n  useEffect(() => {\n    if (username && !signedIn) {\n      signUpForRoomChanges(dispatch, username);\n      setSignedIn(true);\n    }\n  }, [username, signedIn]);\n\n  const joinRoom = useCallback(async (username, imageUrl) => {\n    await dispatch({\n      type: Actions.SET_LOADING,\n      payload: { loading: true }\n    });\n    socket.emit(\"joinRoom\", { username, imageUrl }, (room, error) => {\n      debugger;\n      if (error) {\n        dispatch({ type: Actions.SET_ERROR, payload: { error } });\n      } else {\n        dispatch({ type: Actions.USER_JOIN, payload: { room, username } });\n        setSignedIn(true);\n      }\n    });\n  }, []);\n\n  const sendMessage = useCallback(\n    messageText => {\n      socket.emit(\n        \"sendMessage\",\n        { username, message: messageText },\n        (message, error) => {\n          debugger;\n          if (error) {\n            dispatch({ type: Actions.SET_ERROR, payload: { error } });\n          } else {\n            dispatch({ type: Actions.ADD_MESSAGE, payload: { message } });\n          }\n        }\n      );\n    },\n    [username]\n  );\n\n  const setProfileImage = async file => {\n    try {\n      if (file.size > 4000000) {\n        dispatch({\n          type: Actions.SET_ERROR,\n          payload: { error: \"File Too Big\" }\n        });\n      } else {\n        await dispatch({\n          type: Actions.SET_LOADING,\n          payload: { loading: true }\n        });\n        debugger;\n        var reader = new FileReader();\n        reader.onload = async event => {\n          const imageUrl = event.target.result;\n\n          dispatch({ type: Actions.SET_PROFILE_IMAGE, payload: { imageUrl } });\n        };\n\n        reader.readAsDataURL(file);\n      }\n    } catch (e) {\n      dispatch({\n        type: Actions.SET_ERROR,\n        payload: { error: \"File Format Not Supported\" }\n      });\n    }\n  };\n\n  const actions = {\n    sendMessage,\n    joinRoom,\n    setProfileImage\n  };\n\n  return {\n    state,\n    ...actions\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { socket } from \"../services/socket\";\nimport Dialog from \"../components/Dialog\";\nimport Chat from \"./Chat\";\nimport useChat from \"../hooks/useChat\";\n\nexport default () => {\n  const chat = useChat();\n\n  return (\n    <>\n      <Dialog {...chat} />\n      <Chat {...chat} />\n    </>\n  );\n};\n","import React from \"react\";\nimport axios from \"./api/mini-clip-chat-api\";\nimport MainScreen from \"./screens/MainScreen\";\n\nfunction App() {\n  return <MainScreen />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}