{"version":3,"sources":["const/config.js","api/mini-clip-chat-api.js","services/socket.js","components/Dialog.js","components/ChatMessage.js","components/ChatMessageBoard.js","components/ChatMessageEditor.js","components/ChatListOfUsers.js","screens/Chat.js","const/actions.js","const/messages.js","hooks/useChat.js","screens/MainScreen.js","App.js","serviceWorker.js","index.js"],"names":["url","axios","create","baseURL","socket","openSocket","connect","props","state","actions","useState","username","setUsername","submit","useCallback","joinRoom","Dialog","aria-labelledby","open","DialogTitle","DialogContent","TextField","error","id","label","variant","value","helperText","onChange","e","target","DialogActions","Button","color","onClick","StyledListItem","styled","ListItem","css","TimeAgo","addLocale","en","timeAgo","classes","message_id","sent_at","message","date","Date","alignItems","key","ListItemText","secondary","Typography","component","primary","Fragment","className","inline","format","useStyles","makeStyles","theme","root","height","overflowY","backgroundColor","palette","background","paper","display","messages","showLatest","setShowLatest","bottomRef","useRef","useLayoutEffect","current","scrollIntoView","behavior","length","containerRef","useBottomScrollListener","List","ref","onScroll","map","index","ChatMessage","Divider","style","float","clear","flexDirection","width","sendMessage","setMessage","noValidate","autoComplete","multiline","rows","onKeyPress","shiftKey","users","dense","user","paddingTop","flexDirectoion","drawer","breakpoints","up","flexShrink","appBar","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","toolbarHeader","flexGrow","padding","content","flex","useTheme","React","mobileOpen","setMobileOpen","container","undefined","window","document","body","CssBaseline","Hidden","smUp","implementation","Drawer","anchor","onClose","ModalProps","keepMounted","xsDown","AppBar","position","Toolbar","noWrap","ChatMessageBoard","ChatMessageEditor","event","Actions","MESSAGES","initialState","reducer","type","payload","room","filter","useReducer","dispatch","signedIn","setSignedIn","useEffect","currentUserName","on","console","log","signUpForRoomChanges","messageText","emit","err","chat","useChat","Chat","App","MainScreen","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.bf034c96.chunk.js","sourcesContent":["export const PORT = 3000;\nexport const DEV_PATH = `http://localhost:${PORT}`;\nexport const PROD_PATH = `https://mini-clip-server.herokuapp.com/`;\n\nexport const url = PROD_PATH;\n","import axios from \"axios\";\n\n// import { AsyncStorage } from \"react-native\";\nimport { url } from \"../const/config\";\nconst instance = axios.create({\n  baseURL: url\n});\nexport default instance;\n","import openSocket from \"socket.io-client\";\nimport { url } from \"../const/config\";\n\nexport const socket = openSocket(url);\nsocket.connect();\n","import React, { useState, useCallback } from \"react\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nimport Button from \"@material-ui/core/Button\";\n\nexport default props => {\n  const { state, ...actions } = props;\n\n  const [username, setUsername] = useState(null);\n  const submit = useCallback(username => {\n    username && actions.joinRoom(username);\n  }, []);\n\n  return (\n    <Dialog aria-labelledby=\"simple-dialog-title\" open={!state.username}>\n      <DialogTitle>Sign In</DialogTitle>\n      <DialogContent>\n        <TextField\n          error={state.error}\n          id=\"outlined-basic\"\n          label=\"Username\"\n          variant=\"outlined\"\n          value={username || \"\"}\n          helperText={state.error}\n          onChange={e => {\n            setUsername(e.target.value);\n          }}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            submit(username);\n          }}\n        >\n          SIGN IN\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import React, { useState, useLayoutEffect, useRef } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport TimeAgo from \"javascript-time-ago\";\nimport en from \"javascript-time-ago/locale/en\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst StyledListItem = styled(ListItem)`\n  ${({ username }) => {\n    return (\n      username === \"System\" &&\n      css`\n        background-color: lightgrey;\n      `\n    );\n  }}\n`;\n\nTimeAgo.addLocale(en);\nconst timeAgo = new TimeAgo(\"en-US\");\n\nexport default ({ classes, ...props }) => {\n  const { message_id, sent_at, username, message } = props;\n  const date = new Date(sent_at);\n  debugger;\n\n  return (\n    <StyledListItem\n      username={username}\n      alignItems=\"flex-start\"\n      key={message_id}\n    >\n      <ListItemText\n        secondary={\n          <>\n            <Typography variant=\"h6\" component=\"span\" color=\"textPrimary\">\n              {username}\n            </Typography>\n            {` said  —  `}\n            <Typography variant=\"h6\" component=\"span\" color=\"textPrimary\">\n              {`\"${message}\"`}\n            </Typography>\n          </>\n        }\n        primary={\n          <React.Fragment>\n            <Typography\n              component=\"span\"\n              variant=\"body2\"\n              className={classes.inline}\n              color=\"textPrimary\"\n            >\n              {`${timeAgo.format(date)}`}\n            </Typography>\n          </React.Fragment>\n        }\n      />\n    </StyledListItem>\n  );\n};\n","import React, { useState, useLayoutEffect, useRef } from \"react\";\nimport ChatMessage from \"./ChatMessage\";\nimport { useBottomScrollListener } from \"react-bottom-scroll-listener\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\n\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // width: \"100%\",\n    // flex: 1,\n    height: \"80vh\",\n    overflowY: \"scroll\",\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: \"inline\"\n  }\n}));\n\nexport default ({ messages }) => {\n  const classes = useStyles();\n\n  const [showLatest, setShowLatest] = useState(true);\n\n  const bottomRef = useRef(null);\n\n  const scrollToBottom = () => {\n    bottomRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useLayoutEffect(() => {\n    if (showLatest) {\n      scrollToBottom();\n    }\n  }, [bottomRef, showLatest, messages.length]);\n  const containerRef = useBottomScrollListener(() => {\n    setShowLatest(true);\n  });\n  const onScroll = e => {\n    setShowLatest(false);\n  };\n\n  return (\n    <List ref={containerRef} className={classes.root} onScroll={onScroll}>\n      {messages.map((message, index) => (\n        <div key={index}>\n          <ChatMessage classes={classes} {...message} />\n          <Divider variant=\"inset\" component=\"li\" />\n        </div>\n      ))}\n      <div style={{ float: \"left\", clear: \"both\" }} ref={bottomRef} />\n    </List>\n  );\n};\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    \"& .MuiTextField-root\": {\n      // margin: theme.spacing(1),\n      width: \"100%\"\n    }\n  }\n}));\n\nexport default ({ sendMessage }) => {\n  const classes = useStyles();\n  const [message, setMessage] = useState(\"\");\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <TextField\n        id=\"outlined-multiline-static\"\n        label=\"Message\"\n        multiline\n        rows={4}\n        value={message}\n        variant=\"outlined\"\n        onChange={e => {\n          setMessage(e.target.value);\n        }}\n        onKeyPress={e => {\n          if (e.key === \"Enter\" && e.shiftKey) {\n            sendMessage(message);\n            setMessage(\"\");\n          }\n        }}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => {\n          sendMessage(message);\n\n          setMessage(\"\");\n        }}\n      >\n        SEND\n      </Button>\n    </form>\n  );\n};\n","import React from \"react\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // width: \"100%\",\n    overflowY: \"scroll\",\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport default ({ users }) => {\n  const classes = useStyles();\n\n  return (\n    <List className={classes.root} dense={false}>\n      {users.map(user => {\n        return (\n          <ListItem key={user}>\n            <ListItemText primary={user} />\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport ChatMessageBoard from \"../components/ChatMessageBoard\";\nimport ChatMessageEditor from \"../components/ChatMessageEditor\";\nimport UsersList from \"../components/ChatListOfUsers\";\nimport styled from \"styled-components\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    paddingTop: \"40px\",\n\n    flexDirectoion: \"row\",\n    display: \"flex\",\n    // width: \"100%\",\n    overflow: \"none\"\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`\n\n      // flex: 1\n    }\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\"\n    }\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth\n  },\n  toolbarHeader: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  content: {\n    // width: \"100vw\",\n    // height: \"90%\",\n    width: `calc(100% - ${drawerWidth}px)`,\n\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"column\"\n  }\n}));\n\nexport default ({ state, sendMessage, ...props }) => {\n  const { users, messages } = state;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar}>\n        <div className={classes.toolbarHeader}>Logged In Users</div>\n      </div>\n      <Divider />\n      <UsersList users={users} />\n    </div>\n  );\n\n  const container =\n    window !== undefined ? () => window.document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n\n      <div className={classes.drawer}>\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={\"left\"}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper\n            }}\n            ModalProps={{\n              keepMounted: true // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </div>\n      <div className={classes.content}>\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <Toolbar className={classes.appBar}>\n            <Typography variant=\"h6\" noWrap>\n              Mini-Clip Chat\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <ChatMessageBoard messages={messages} />\n        <ChatMessageEditor sendMessage={sendMessage} />\n      </div>\n    </div>\n  );\n};\n","export default {\n  USER_JOIN: \"USER_JOIN\",\n  USER_JOINED: \"USER_JOINED\",\n  USER_LEFT: \"USER_LEFT\",\n  SET_ERROR: \"SET_ERROR\",\n  ADD_MESSAGE: \"ADD_MESSAGE\",\n  RESET: \"RESET\"\n};\n","import Actions from \"./actions\";\n\nconst MESSAGES = username => ({\n  [Actions.USER_JOINED]: `${username} joined the room...`,\n  [Actions.USER_LEFT]: `${username} left the room...`\n});\n\nconst message = (username, sent_at, message) => ({\n  username,\n  sent_at,\n  message\n});\n\nexport default (event, username) => {\n  return message(\"System\", new Date(), MESSAGES(username)[event]);\n};\n","import { useState, useReducer, useEffect, useCallback } from \"react\";\nimport Actions from \"../const/actions\";\nimport { socket } from \"../services/socket\";\nimport messages from \"../const/messages\";\n\nconst initialState = {\n  error: \"\",\n  messages: [],\n  username: \"\",\n  users: []\n};\n\nconst reducer = (state, { type, payload }) => {\n  const { username } = payload;\n  switch (type) {\n    case Actions.SET_ERROR:\n      const { error } = payload;\n      return { ...state, error };\n    case Actions.ADD_MESSAGE:\n      const { message } = payload;\n      // debugger;\n      return {\n        ...state,\n        error: \"\",\n        messages: [...state.messages, message]\n      };\n    case Actions.USER_JOIN:\n      const { room } = payload;\n      return {\n        ...state,\n        ...room,\n        username,\n        error: \"\"\n      };\n      break;\n    case Actions.USER_LEFT:\n      debugger;\n      return {\n        ...state,\n        users: state.users.filter(user => user !== username),\n        messages: [...state.messages, messages(Actions.USER_LEFT, username)],\n        error: \"\"\n      };\n      break;\n    case Actions.USER_JOINED:\n      return {\n        ...state,\n        error: \"\",\n        messages: [...state.messages, messages(Actions.USER_JOINED, username)],\n        users: [...state.users, username]\n      };\n      break;\n    case Actions.RESET:\n      return initialState;\n      break;\n    default:\n      return state;\n  }\n};\nconst signUpForRoomChanges = (dispatch, currentUserName) => {\n  socket.on(\"message\", message => {\n    // debugger;\n    dispatch({ type: Actions.ADD_MESSAGE, payload: { message } });\n  });\n  socket.on(\"joinedRoom\", ({ username }) => {\n    // debugger;\n    dispatch({ type: Actions.USER_JOINED, payload: { username } });\n  });\n  socket.on(\"leftRoom\", ({ username }) => {\n    debugger;\n    if (currentUserName === username) {\n      dispatch({ type: Actions.RESET });\n    } else {\n      dispatch({ type: Actions.USER_LEFT, payload: { username } });\n    }\n  });\n  socket.on(\"error\", error => {\n    console.log(error);\n  });\n};\n\nexport default () => {\n  const [state, dispatch] = useReducer(reducer, { ...initialState });\n  const [signedIn, setSignedIn] = useState(false);\n  const { username } = state;\n  useEffect(() => {\n    if (username && !signedIn) {\n      signUpForRoomChanges(dispatch);\n      setSignedIn(true);\n    }\n  }, [username, signedIn]);\n\n  const joinRoom = username => {\n    socket.emit(\"joinRoom\", { username }, (room, error) => {\n      debugger;\n      if (error) {\n        dispatch({ type: Actions.SET_ERROR, payload: { error } });\n      } else {\n        dispatch({ type: Actions.USER_JOIN, payload: { room, username } });\n        setSignedIn(true);\n      }\n    });\n  };\n\n  const sendMessage = messageText => {\n    socket.emit(\n      \"sendMessage\",\n      { username, message: messageText },\n      (message, err) => {\n        if (err) {\n          return console.log(err);\n        }\n        dispatch({ type: Actions.ADD_MESSAGE, payload: { message } });\n      }\n    );\n  };\n\n  const actions = {\n    sendMessage,\n    joinRoom\n  };\n\n  return {\n    state,\n    ...actions\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { socket } from \"../services/socket\";\nimport Dialog from \"../components/Dialog\";\nimport Chat from \"./Chat\";\nimport useChat from \"../hooks/useChat\";\n\nexport default () => {\n  const chat = useChat();\n\n  return (\n    <>\n      <Dialog {...chat} />\n      <Chat {...chat} />\n    </>\n  );\n};\n","import React from \"react\";\nimport axios from \"./api/mini-clip-chat-api\";\nimport MainScreen from \"./screens/MainScreen\";\n\nfunction App() {\n  return <MainScreen />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}