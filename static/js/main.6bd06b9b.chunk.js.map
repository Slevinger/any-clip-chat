{"version":3,"sources":["const/config.js","api/mini-clip-chat-api.js","const/actions.js","const/messages.js","reducers/messagesReducer.js","services/socket.js","context/createDataContext.js","context/MessagesContext.js","components/Dialog.js","utils/index.js","components/ChatMessage.js","components/ChatMessageBoard.js","components/ChatMessageEditor.js","components/ChatListOfUsers.js","components/Touchable.js","screens/Chat.js","screens/MainScreen.js","App.js","serviceWorker.js","index.js"],"names":["url","axios","create","baseURL","USER_JOIN","USER_JOINED","USER_LEFT","SET_ERROR","ADD_MESSAGE","SET_PROFILE_IMAGE","SET_IMAGE","RESET","SET_LOADING","ASSIGN_TO_ROOM","event","username","sent_at","message","Date","Actions","MESSAGES","initialState","error","messages","imageUrl","users","loading","signedIn","socket","openSocket","connect","signUpForRoomChanges","dispatch","currentUserName","on","type","payload","user","SIGN_TO_ROOM","console","log","reducer","actions","defaultValues","Context","React","createContext","Provider","children","useReducer","state","boundActions","Object","keys","reduce","acc","key","value","createDataContext","room","a","socketSignUp","joinRoom","emit","sendMessage","messageText","setProfileImage","file","size","reader","FileReader","onload","target","result","readAsDataURL","LinkContainer","styled","div","disabled","css","useStyles","makeStyles","theme","avatarPicker","padding","marginTop","borderWidth","flexDirection","display","alignItems","alignText","props","classes","useContext","ChatContext","fileSelector","handleFileSelected","document","createElement","setAttribute","onchange","e","files","createFileSelector","useState","setUsername","submit","useCallback","Dialog","aria-labelledby","open","DialogTitle","DialogContent","TextField","id","label","variant","helperText","onChange","Container","className","Avatar","alt","src","linkContainer","href","onClick","click","DialogActions","Button","color","endIcon","CircularProgress","StyledListItem","ListItem","TimeAgo","addLocale","en","timeAgo","message_id","date","ListItemAvatar","ListItemText","secondary","Typography","component","stlye","primary","Fragment","style","alignSelf","inline","format","root","height","overflowY","backgroundColor","palette","background","paper","showLatest","setShowLatest","bottomRef","useRef","useLayoutEffect","current","scrollIntoView","behavior","length","containerRef","useBottomScrollListener","List","ref","onScroll","map","index","ChatMessage","Divider","float","clear","width","setMessage","noValidate","autoComplete","multiline","rows","onKeyPress","shiftKey","dense","values","filter","Boolean","swipeRight","touchStartX","setTouchStartX","touchEndX","setTouchEndX","useEffect","addEventListener","changedTouches","clientX","paddingTop","drawer","breakpoints","up","flexShrink","appBar","toolbar","mixins","drawerPaper","toolbarHeader","flexGrow","spacing","content","flex","mobileOpen","setMobileOpen","touchableRef","handleDrawerToggle","container","undefined","window","body","Touchable","CssBaseline","Hidden","smUp","implementation","Drawer","anchor","onClose","ModalProps","keepMounted","xsDown","AppBar","position","Toolbar","noWrap","ChatMessageBoard","ChatMessageEditor","Chat","App","MainScreen","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.6bd06b9b.chunk.js","sourcesContent":["export const PORT = 3000;\nexport const DEV_PATH = `http://localhost:${PORT}`;\nexport const PROD_PATH = `https://any-clip-server.herokuapp.com/`;\n\nexport const url = PROD_PATH;\n","import axios from \"axios\";\n\n// import { AsyncStorage } from \"react-native\";\nimport { url } from \"../const/config\";\nconst instance = axios.create({\n  baseURL: url\n});\nexport default instance;\n","export default {\n  USER_JOIN: \"USER_JOIN\",\n  USER_JOINED: \"USER_JOINED\",\n  USER_LEFT: \"USER_LEFT\",\n  SET_ERROR: \"SET_ERROR\",\n  ADD_MESSAGE: \"ADD_MESSAGE\",\n  SET_PROFILE_IMAGE: \"SET_PROFILE_IMAGE\",\n  SET_IMAGE: \"SET_IMAGE\",\n  RESET: \"RESET\",\n  SET_LOADING: \"SET_LOADING\",\n  ASSIGN_TO_ROOM: \"ASSIGN_TO_ROOM\"\n};\n","import Actions from \"./actions\";\n\nconst MESSAGES = username => ({\n  [Actions.USER_JOINED]: `${username} joined the room.`,\n  [Actions.USER_LEFT]: `${username} left the room.`\n});\n\nconst message = (username, sent_at, message) => ({\n  username,\n  sent_at,\n  message\n});\n\nexport default (event, username) => {\n  return message(\"System\", new Date(), MESSAGES(username)[event]);\n};\n","import messages from \"../const/messages\";\nimport Actions from \"../const/actions\";\n\nexport const initialState = {\n  error: \"\",\n  messages: [],\n  username: \"\",\n  imageUrl: \"\",\n  users: [],\n  loading: false,\n  signedIn: false\n};\n\nexport default (state, { type, payload }) => {\n  const { user } = payload;\n  switch (type) {\n    case Actions.SET_ERROR:\n      const { error } = payload;\n      return { ...state, error, loading: false };\n    case Actions.ADD_MESSAGE:\n      const { message } = payload;\n      // debugger;\n      return {\n        ...state,\n        error: \"\",\n        loading: false,\n        messages: [...state.messages, message]\n      };\n    case Actions.USER_JOIN:\n      const { room, username } = payload;\n      return {\n        ...state,\n        ...room,\n        loading: true,\n        username,\n        error: \"\"\n      };\n      break;\n    case Actions.USER_LEFT:\n      return {\n        ...state,\n        users: { ...state.users, [user.username]: null },\n        messages: [\n          ...state.messages,\n          messages(Actions.USER_LEFT, user.username)\n        ],\n        loading: false,\n        error: \"\"\n      };\n      break;\n    case Actions.USER_JOINED:\n      return {\n        ...state,\n        error: \"\",\n        loading: false,\n        messages: [\n          ...state.messages,\n          messages(Actions.USER_JOINED, user.username)\n        ],\n        users: { ...state.users, [user.username]: user }\n      };\n      break;\n    case Actions.SET_PROFILE_IMAGE:\n      const { imageUrl } = payload;\n      return { ...state, imageUrl, error: \"\", loading: false };\n      break;\n    case Actions.SET_LOADING:\n      const { loading } = payload;\n      return { ...state, loading };\n    case Actions.ASSIGN_TO_ROOM:\n      return { ...state, signedIn: true };\n    case Actions.RESET:\n      return { ...initialState };\n      break;\n    default:\n      return state;\n  }\n};\n","import openSocket from \"socket.io-client\";\nimport Actions from \"../const/actions\";\nimport { url } from \"../const/config\";\n\nexport const socket = openSocket(url);\nsocket.connect();\n\nexport const signUpForRoomChanges = (dispatch, currentUserName) => {\n  socket.on(\"message\", message => {\n    // debugger;\n    dispatch({ type: Actions.ADD_MESSAGE, payload: { message } });\n  });\n  socket.on(\"joinedRoom\", user => {\n    // debugger;\n    dispatch({ type: Actions.USER_JOINED, payload: { user } });\n  });\n  socket.on(\"leftRoom\", user => {\n    // debugger;\n    if (currentUserName === user.username) {\n      dispatch({ type: Actions.RESET, payload: {} });\n    } else {\n      dispatch({ type: Actions.USER_LEFT, payload: { user } });\n    }\n  });\n\n  dispatch({ type: Actions.SIGN_TO_ROOM, payload: {} });\n\n  socket.on(\"error\", error => {\n    console.log(error);\n  });\n};\n","import React, { useReducer } from \"react\";\n\n// a context constructor that uses reducer\n// params :\n//  reducer : a reducer function\n//  actions : a list of actions that are based on that reducer's dispatch\n//  defaultValues: the context's initialState\n\nexport default (reducer, actions, defaultValues) => {\n  const Context = React.createContext();\n\n  const Provider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, defaultValues);\n\n    const boundActions = Object.keys(actions).reduce(\n      (acc, key) => ({\n        ...acc,\n        [key]: actions[key](dispatch)\n      }),\n      {}\n    );\n    return (\n      <Context.Provider value={{ state, ...boundActions }}>\n        {children}\n      </Context.Provider>\n    );\n  };\n\n  return { Context, Provider };\n};\n","import createDataContext from \"./createDataContext\";\n\nimport messagesReducer, { initialState } from \"../reducers/messagesReducer\";\nimport Actions from \"../const/actions\";\nimport {\n  socket,\n  signUpForRoomChanges as socketSignUp\n} from \"../services/socket\";\n\nconst signUpForRoomChanges = dispatch => async username =>\n  await socketSignUp(dispatch, username);\n\nconst joinRoom = dispatch => async (username, imageUrl) => {\n  await dispatch({\n    type: Actions.SET_LOADING,\n    payload: { loading: true }\n  });\n\n  socket.emit(\"joinRoom\", { username, imageUrl }, (room, error) => {\n\n    if (error) {\n      dispatch({ type: Actions.SET_ERROR, payload: { error } });\n    } else {\n      dispatch({ type: Actions.USER_JOIN, payload: { room, username } });\n    }\n  });\n};\n\nconst sendMessage = dispatch => (username, messageText) => {\n  socket.emit(\n    \"sendMessage\",\n    { username, message: messageText },\n    (message, error) => {\n\n      if (error) {\n        dispatch({ type: Actions.SET_ERROR, payload: { error } });\n      } else {\n        dispatch({ type: Actions.ADD_MESSAGE, payload: { message } });\n      }\n    }\n  );\n};\n\nconst setProfileImage = dispatch => async file => {\n  try {\n    if (file.size > 4000000) {\n      dispatch({\n        type: Actions.SET_ERROR,\n        payload: { error: \"File Too Big\" }\n      });\n    } else {\n      await dispatch({\n        type: Actions.SET_LOADING,\n        payload: { loading: true }\n      });\n\n      var reader = new FileReader();\n      reader.onload = async event => {\n        const imageUrl = event.target.result;\n\n        dispatch({ type: Actions.SET_PROFILE_IMAGE, payload: { imageUrl } });\n      };\n\n      reader.readAsDataURL(file);\n    }\n  } catch (e) {\n    dispatch({\n      type: Actions.SET_ERROR,\n      payload: { error: \"File Format Not Supported\" }\n    });\n  }\n};\n\nexport const { Provider, Context } = createDataContext(\n  messagesReducer,\n  {\n    signUpForRoomChanges,\n    joinRoom,\n    sendMessage,\n    setProfileImage\n  },\n  initialState\n);\n","import React, { useState, useCallback, useContext } from \"react\";\nimport { Context as ChatContext } from \"../context/MessagesContext\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styled, { css } from \"styled-components\";\nimport { createFileSelector, toBase64 } from \"../utils\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst LinkContainer = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  a {\n    text-decoration: none;\n    ${({ disabled }) =>\n      disabled &&\n      css`\n        pointer-events: none;\n      `}\n  }\n`;\nconst useStyles = makeStyles(theme => ({\n  avatarPicker: {\n    padding: \"0px\",\n    marginTop: \"10px\",\n    borderWidth: \"thin\",\n    flexDirection: \"row\",\n    display: \"flex\",\n    alignItems: \"center\",\n    alignText: \"center\"\n  }\n}));\n\nexport default props => {\n  const classes = useStyles();\n  const { state, setProfileImage, joinRoom } = useContext(ChatContext);\n  // const { state, setProfileImage, ...actions } = props;\n  const { loading } = state;\n\n  const fileSelector = createFileSelector(setProfileImage);\n\n  const [username, setUsername] = useState(null);\n  const submit = useCallback(\n    username => {\n      username && joinRoom(username, state.imageUrl);\n    },\n    [state]\n  );\n\n  return (\n    <Dialog aria-labelledby=\"simple-dialog-title\" open={!state.username}>\n      <DialogTitle>Sign In</DialogTitle>\n      <DialogContent>\n        <TextField\n          error={state.error}\n          id=\"outlined-basic\"\n          label=\"Username\"\n          variant=\"outlined\"\n          value={username || \"\"}\n          helperText={state.error}\n          onChange={e => {\n            setUsername(e.target.value);\n          }}\n        />\n        <Container className={classes.avatarPicker}>\n          <Avatar alt={username} src={state.imageUrl} />\n          <LinkContainer className={classes.linkContainer}>\n            <a\n              href=\"#\"\n              onClick={() => {\n                fileSelector.click();\n              }}\n            >\n              Choose Image\n            </a>\n          </LinkContainer>\n        </Container>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          endIcon={loading && <CircularProgress color=\"white\" size={20} />}\n          onClick={() => {\n            submit(username);\n          }}\n        >\n          SIGN IN\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","export const createFileSelector = handleFileSelected => {\n  const fileSelector = document.createElement(\"input\");\n  fileSelector.setAttribute(\"type\", \"file\");\n  fileSelector.onchange = e => {\n    handleFileSelected(e.target.files[0]);\n  };\n  return fileSelector;\n};\n\nexport const toBase64 = file =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport TimeAgo from \"javascript-time-ago\";\nimport en from \"javascript-time-ago/locale/en\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst StyledListItem = styled(ListItem)`\n  ${({ username }) => {\n    return (\n      username === \"System\" &&\n      css`\n        background-color: lightgrey;\n      `\n    );\n  }}\n`;\n\nTimeAgo.addLocale(en);\nconst timeAgo = new TimeAgo(\"en-US\");\n\nexport default ({ classes, user, ...props }) => {\n  const { message_id, sent_at, username, message } = props;\n  const date = new Date(sent_at);\n  debugger;\n  return (\n    <StyledListItem\n      username={username}\n      alignItems=\"flex-start\"\n      key={message_id}\n    >\n      <ListItemAvatar>\n        <Avatar alt={username} src={user.imageUrl} />\n      </ListItemAvatar>\n      <ListItemText\n        secondary={\n          <>\n            <Typography variant=\"h6\" component=\"span\" color=\"textPrimary\">\n              {username}\n            </Typography>\n            {` said  —  `}\n            <Typography variant=\"h6\" component=\"span\" color=\"textPrimary\">\n              <Typography\n                stlye={{ display: \"table-caption\" }}\n                variant=\"h6\"\n                component=\"span\"\n                color=\"textPrimary\"\n              >\n                {`${message}`}\n              </Typography>\n            </Typography>\n          </>\n        }\n        primary={\n          <React.Fragment>\n            <Typography\n              component=\"span\"\n              style={{ alignSelf: \"flex-end\" }}\n              variant=\"body2\"\n              className={classes.inline}\n              color=\"textPrimary\"\n            >\n              {`${timeAgo.format(date)}`}\n            </Typography>\n          </React.Fragment>\n        }\n      />\n    </StyledListItem>\n  );\n};\n","import React, { useState, useLayoutEffect, useRef, useContext } from \"react\";\nimport { Context as ChatContext } from \"../context/MessagesContext\";\nimport ChatMessage from \"./ChatMessage\";\nimport { useBottomScrollListener } from \"react-bottom-scroll-listener\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // width: \"100%\",\n    // flex: 1,\n    height: \"80vh\",\n    overflowY: \"scroll\",\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: \"inline\"\n  }\n}));\n\nexport default () => {\n  const classes = useStyles();\n  const {\n    state: { messages, users }\n  } = useContext(ChatContext);\n\n  const [showLatest, setShowLatest] = useState(true);\n  const bottomRef = useRef(null);\n\n  const scrollToBottom = () => {\n    bottomRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useLayoutEffect(() => {\n    if (showLatest) {\n      scrollToBottom();\n    }\n  }, [showLatest, messages.length]);\n\n  const containerRef = useBottomScrollListener(() => {\n    setShowLatest(true);\n  });\n\n  const onScroll = e => {\n    setShowLatest(false);\n  };\n\n  return (\n    <List ref={containerRef} className={classes.root} onScroll={onScroll}>\n      {messages.map((message, index) => (\n        <div key={index}>\n          <ChatMessage\n            classes={classes}\n            user={users[message.username] || {}}\n            {...message}\n          />\n          <Divider variant=\"inset\" component=\"li\" />\n        </div>\n      ))}\n      <div style={{ float: \"left\", clear: \"both\" }} ref={bottomRef} />\n    </List>\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button } from \"@material-ui/core\";\nimport { Context as ChatContext } from \"../context/MessagesContext\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    \"& .MuiTextField-root\": {\n      // margin: theme.spacing(1),\n      width: \"100%\"\n    }\n  }\n}));\n\nexport default () => {\n  const classes = useStyles();\n  const [message, setMessage] = useState(\"\");\n  const {\n    state: { username, error },\n    sendMessage\n  } = useContext(ChatContext);\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <TextField\n        error={username && error}\n        helperText={username && error}\n        id=\"outlined-multiline-static\"\n        label=\"Message\"\n        multiline\n        rows={4}\n        value={message}\n        variant=\"outlined\"\n        onChange={e => {\n          setMessage(e.target.value);\n        }}\n        onKeyPress={e => {\n          if (e.key === \"Enter\" && e.shiftKey) {\n            sendMessage(username, message);\n            setMessage(\"\");\n          }\n        }}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => {\n          sendMessage(username, message);\n          setMessage(\"\");\n        }}\n      >\n        SEND\n      </Button>\n    </form>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Context as ChatContext } from \"../context/MessagesContext\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // width: \"100%\",\n    overflowY: \"scroll\",\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport default () => {\n  const {\n    state: { users }\n  } = useContext(ChatContext);\n  const classes = useStyles();\n  return (\n    <List className={classes.root} dense={false}>\n      {Object.values(users)\n        .filter(Boolean)\n        .map(({ username, imageUrl }) => {\n          return (\n            <ListItem key={username}>\n              <ListItemAvatar>\n                <Avatar alt={username} src={imageUrl} />\n              </ListItemAvatar>\n              <ListItemText primary={username} />\n            </ListItem>\n          );\n        })}\n    </List>\n  );\n};\n","import React, { useRef, useLayoutEffect, useEffect, useState } from \"react\";\n\nexport default ({ children, swipeRight, ...props }) => {\n  const [touchStartX, setTouchStartX] = useState(null);\n  const [touchEndX, setTouchEndX] = useState(null);\n  const ref = useRef(null);\n  useEffect(() => {\n    if (touchStartX < touchEndX) {\n      if (touchStartX < 15 && touchEndX > 100) {\n        console.log(\"swipe\");\n        swipeRight();\n      }\n    }\n  }, [touchStartX, touchEndX]);\n  useLayoutEffect(() => {\n    ref.current.addEventListener(\"touchstart\", async e => {\n      await setTouchEndX(null);\n      setTouchStartX(e.changedTouches[0].clientX);\n      // console.log(e.changedTouches[0].clientX);\n    });\n    ref.current.addEventListener(\"touchend\", e => {\n      setTouchEndX(e.changedTouches[0].clientX);\n      // console.log(e.changedTouches[0].clientX);\n    });\n  }, [ref]);\n\n  return (\n    <div ref={ref} {...props}>\n      {children}\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { Context as ChatContext } from \"../context/MessagesContext\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport ChatMessageBoard from \"../components/ChatMessageBoard\";\nimport ChatMessageEditor from \"../components/ChatMessageEditor\";\nimport UsersList from \"../components/ChatListOfUsers\";\nimport Touchable from \"../components/Touchable\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    paddingTop: \"40px\",\n    flexDirection: \"row\",\n    display: \"flex\",\n    overflow: \"none\"\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`\n    }\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth\n  },\n  toolbarHeader: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  content: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"column\"\n  }\n}));\n\nexport default () => {\n  const classes = useStyles();\n\n  const [mobileOpen, setMobileOpen] = useState(false);\n  const {\n    state: { users, signedIn, username },\n    signUpForRoomChanges\n  } = useContext(ChatContext);\n  const touchableRef = useRef();\n\n  useEffect(() => {\n    if (!signedIn && username) {\n      signUpForRoomChanges(username);\n    }\n  }, [username]);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar}>\n        <div className={classes.toolbarHeader}>Logged In Users</div>\n      </div>\n      <Divider />\n      <UsersList />\n    </div>\n  );\n  const container =\n    window !== undefined ? () => window.document.body : undefined;\n\n  return (\n    <Touchable\n      ref={touchableRef}\n      swipeRight={handleDrawerToggle}\n      className={classes.root}\n    >\n      <CssBaseline />\n      <div className={classes.drawer}>\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={\"left\"}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper\n            }}\n            ModalProps={{\n              keepMounted: true // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper\n            }}\n            anchor={\"left\"}\n            variant=\"permanent\"\n            open\n            ModalProps={{\n              keepMounted: true // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </div>\n      <div className={classes.content}>\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <Toolbar className={classes.appBar}>\n            <Typography variant=\"h6\" noWrap>\n              Any-Clip Chat\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <ChatMessageBoard />\n        <ChatMessageEditor />\n      </div>\n    </Touchable>\n  );\n};\n","import React from \"react\";\nimport Dialog from \"../components/Dialog\";\nimport Chat from \"./Chat\";\n\nexport default () => {\n  return (\n    <>\n      <Dialog />\n      <Chat />\n    </>\n  );\n};\n","import React from \"react\";\nimport axios from \"./api/mini-clip-chat-api\";\nimport MainScreen from \"./screens/MainScreen\";\nimport { Provider as ChatProvider } from \"./context/MessagesContext\";\n\nfunction App() {\n  return (\n    <ChatProvider>\n      <MainScreen />\n    </ChatProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}